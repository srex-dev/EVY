# Enhanced lilEVY Dockerfile with LoRa Radio Support
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    make \
    git \
    curl \
    wget \
    vim \
    htop \
    iotop \
    net-tools \
    iputils-ping \
    dnsutils \
    telnet \
    tcpdump \
    wireshark-common \
    tshark \
    nmap \
    i2c-tools \
    spi-tools \
    python3-dev \
    python3-pip \
    python3-venv \
    python3-setuptools \
    python3-wheel \
    libffi-dev \
    libssl-dev \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    liblcms2-dev \
    libwebp-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    libxcb1-dev \
    libbluetooth-dev \
    libusb-1.0-0-dev \
    libudev-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install LoRa and radio communication libraries
RUN pip3 install --no-cache-dir \
    pyserial \
    spidev \
    RPi.GPIO \
    smbus \
    pybluez \
    cryptography \
    pycryptodome \
    lora-sx1276 \
    lora-mesh \
    radio-communication \
    mesh-networking \
    wireless-tools \
    rf-tools

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install additional dependencies for enhanced lilEVY
RUN pip3 install --no-cache-dir \
    asyncio-mqtt \
    paho-mqtt \
    redis-py-cluster \
    celery \
    flower \
    prometheus-client \
    grafana-api \
    influxdb-client \
    elasticsearch \
    logstash \
    kibana \
    jaeger-client \
    opentelemetry-api \
    opentelemetry-sdk \
    opentelemetry-instrumentation \
    opentelemetry-exporter-jaeger \
    opentelemetry-exporter-prometheus

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /data/lilevy \
    /data/sms \
    /data/llm \
    /data/rag \
    /data/chroma \
    /data/knowledge \
    /data/lora \
    /data/mesh \
    /data/router \
    /data/privacy \
    /data/metrics \
    /models/tiny \
    /logs

# Set permissions
RUN chmod +x /app/start.sh
RUN chown -R root:root /data /models /logs

# Create startup script
RUN echo '#!/bin/bash\n\
echo "Starting Enhanced lilEVY Node..."\n\
echo "Node ID: $NODE_ID"\n\
echo "LoRa Enabled: $LORA_ENABLED"\n\
echo "Mesh Network: $MESH_NETWORK_ENABLED"\n\
echo "Smart Routing: $SMART_ROUTING_ENABLED"\n\
\n\
# Check hardware interfaces\n\
echo "Checking hardware interfaces..."\n\
ls -la /dev/ttyUSB* 2>/dev/null || echo "No USB serial devices found"\n\
ls -la /dev/spi* 2>/dev/null || echo "No SPI devices found"\n\
ls -la /dev/i2c* 2>/dev/null || echo "No I2C devices found"\n\
\n\
# Initialize LoRa hardware if available\n\
if [ "$LORA_ENABLED" = "true" ] && [ -e "/dev/ttyUSB0" ]; then\n\
    echo "Initializing LoRa hardware..."\n\
    chmod 666 /dev/ttyUSB0\n\
fi\n\
\n\
# Initialize GSM hardware if available\n\
if [ -e "/dev/ttyUSB1" ]; then\n\
    echo "Initializing GSM hardware..."\n\
    chmod 666 /dev/ttyUSB1\n\
fi\n\
\n\
# Start the enhanced lilEVY service\n\
echo "Starting Enhanced lilEVY Service..."\n\
python3 -m uvicorn backend.lilevy.services.enhanced_lilevy_service:enhanced_lilevy_service --host 0.0.0.0 --port 8000\n\
' > /app/start.sh

RUN chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose ports
EXPOSE 8000 8001 8002 3001 9090 6379

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV NODE_TYPE=lilevy
ENV LORA_ENABLED=true
ENV MESH_NETWORK_ENABLED=true
ENV SMART_ROUTING_ENABLED=true

# Labels
LABEL maintainer="EVY Team"
LABEL version="1.0.0"
LABEL description="Enhanced lilEVY Node with LoRa Radio and Mesh Networking"
LABEL node.type="enhanced-lilevy"
LABEL capabilities="sms,llm,rag,lora,mesh,routing"

# Start the application
CMD ["/app/start.sh"]
